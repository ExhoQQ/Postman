{
	"info": {
		"_postman_id": "220a0670-01bd-4ee9-ac35-7cc90d2347d1",
		"name": "Homework_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "28456255"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{url}}/first"
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"let reqData = request.data;\r",
							"let test = pm.test;\r",
							"let reqAge = reqData.age;\r",
							"let reqName = reqData.name;\r",
							"let reqSal = +reqData.salary;\r",
							"let respFam = reqData.family;\r",
							"let endSalary = jsonData.u_salary_1_5_year;\r",
							"let timesSalary = reqData.u_salary_1_5_year;\r",
							"\r",
							"test(\"Check age\", function () {\r",
							"    pm.expect(+jsonData.age).to.eql(19);\r",
							"});\r",
							"\r",
							"test(\"Check name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql('Volodymyr');\r",
							"});\r",
							"\r",
							"test(\"Check salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(300);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"test(\"Check age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(reqAge);\r",
							"});\r",
							"\r",
							"test(\"Check name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqName);\r",
							"});\r",
							"\r",
							"test(\"Check salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(reqSal);\r",
							"});\r",
							"\r",
							"\r",
							"test(\"Check salary *4\"), function () {\r",
							"    pm.expect(endSalary).to.eql(timesSalary)\r",
							"}\r",
							"\r",
							"console.log(respFam)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Volodymyr",
							"type": "text"
						},
						{
							"key": "age",
							"value": "19",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "300",
							"type": "text"
						}
					]
				},
				"url": "{{url}}/user_info_3"
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let reqUrl = pm.request.url.query.toObject()\r",
							"let respData = pm.response.json()\r",
							"\r",
							"pm.test(\"Name check\", function () {\r",
							"    pm.expect(reqUrl.name).to.eql('Volodymyr');\r",
							"});\r",
							"\r",
							"pm.test(\"Age check\", function () {\r",
							"    pm.expect(+reqUrl.age).to.eql(19);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary check\", function () {\r",
							"    pm.expect(+reqUrl.salary).to.eql(300);\r",
							"});\r",
							"\r",
							"console.log(respData.family)\r",
							"\r",
							"pm.test(\"Dog has name test\", function (){\r",
							"    pm.expect(respData.family.pets.dog).to.have.property(\"name\");\r",
							"})\r",
							"\r",
							"pm.test(\"Dog has age test\", function (){\r",
							"    pm.expect(respData.family.pets.dog).to.have.property(\"age\");\r",
							"})\r",
							"\r",
							"pm.test(\"Dog age test\", function (){\r",
							"    pm.expect(respData.family.pets.dog.age).to.eql(4);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Volodymyr&age=19&salary=300",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Volodymyr"
						},
						{
							"key": "age",
							"value": "19"
						},
						{
							"key": "salary",
							"value": "300"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let respData = pm.response.json()\r",
							"let reqUrl = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Name is correct\", function () {\r",
							"    pm.expect(reqUrl.name).to.eql('Volodymyr');\r",
							"});\r",
							"\r",
							"pm.test(\"Age is correct\", function () {\r",
							"    pm.expect(+reqUrl.age).to.eql(19);\r",
							"});\r",
							"\r",
							"console.log(reqUrl.salary)\r",
							"console.log(respData.salary)\r",
							"console.log(respData.salary[0])\r",
							"console.log(+respData.salary[1])\r",
							"console.log(+respData.salary[2])\r",
							"\r",
							"pm.test(\"[0] salary = request salary\", function () {\r",
							"    pm.expect(respData.salary[0]).to.eql(+reqUrl.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"[1] salary = request salary*2\", function () {\r",
							"    pm.expect(+respData.salary[1]).to.eql(reqUrl.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"[2] salary = request salary*3\", function () {\r",
							"    pm.expect(+respData.salary[2]).to.eql(reqUrl.salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", respData.name);\r",
							"pm.environment.set(\"age\", respData.age);\r",
							"pm.environment.set(\"salary\", respData.salary);\r",
							"\r",
							"respData.salary.forEach(element=>console.log(element));\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Volodymyr&age=19&salary=300",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Volodymyr"
						},
						{
							"key": "age",
							"value": "19"
						},
						{
							"key": "salary",
							"value": "300"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}